C51 COMPILER V9.60.0.0   EMCONTROL                                                         09/01/2022 19:19:40 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE EMCONTROL
OBJECT MODULE PLACED IN EMcontrol.OBJ
COMPILER INVOKED BY: C:\Keil_v5_c51\C51\BIN\C51.EXE EMcontrol.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include <reg52.h>
   2          //电机驱动
   3          sbit EM1_P=P1^5;
   4          sbit EM1_1=P1^2;
   5          sbit EM1_2=P1^1;
   6          
   7          sbit EM2_P=P1^6;
   8          sbit EM2_1=P1^4;
   9          sbit EM2_2=P1^3;
  10          
  11          sbit R_LED=P3^5;
  12          sbit L_LED=P3^4;
  13          sbit R_LED_DOWN=P3^3;
  14          sbit L_LED_DOWN=P3^2;
  15          
  16          
  17          
  18          //循迹避障模块接线
  19          sbit left_led1 = P3^7;  //左寻迹信号为0 没有识别到黑线 为1识别到黑线
  20          sbit right_led1= P3^6;  //右寻迹信号为0 没有识别到黑线 为1识别到黑线
  21          
  22          //蜂鸣
  23          sbit beep = P2^3;
  24          //超声
  25          extern unsigned int Distance;
  26          extern void measure_distance();
  27          //延时
  28          extern void delay(unsigned int n,unsigned char mode);
  29          //红外
  30          extern unsigned char ircode[4];
  31          //PWM
  32          extern unsigned char PWM_LEVEL_1;
  33          extern unsigned char PWM_LEVEL_2;
  34          void R_follow();
  35          void L_follow();
  36          
  37          void EMinit()
  38          {
  39   1        EM1_1=1,EM1_2=1;
  40   1        EM2_1=1,EM2_2=1;
  41   1        EM1_P=1;
  42   1        EM2_P=1;
  43   1      }
  44          void go_stop()
  45          {
  46   1      
  47   1        EM1_1=0,EM1_2=0;
  48   1        EM2_1=0,EM2_2=0;
  49   1      
  50   1      }
  51          void go_still()
  52          {
  53   1        EM1_1=1,EM1_2=1;
  54   1        EM2_1=1,EM2_2=1;
  55   1      }
C51 COMPILER V9.60.0.0   EMCONTROL                                                         09/01/2022 19:19:40 PAGE 2   

  56          void go_forward()
  57          {
  58   1        EM1_1=1,EM1_2=0;
  59   1        EM2_1=1,EM2_2=0;
  60   1      
  61   1      }
  62          void go_back()
  63          {
  64   1        EM1_1=0,EM1_2=1;
  65   1        EM2_1=0,EM2_2=1;
  66   1      
  67   1      }
  68          void go_left()
  69          {
  70   1        EM1_1=1,EM1_2=1;
  71   1        EM2_1=1,EM2_2=0;
  72   1      
  73   1      }
  74          void go_right()
  75          {
  76   1        EM1_1=1,EM1_2=0;
  77   1        EM2_1=1,EM2_2=1;
  78   1      
  79   1      }
  80          void rotate_l()
  81          {
  82   1        EM1_1=0,EM1_2=1;
  83   1        EM2_1=1,EM2_2=0;
  84   1        
  85   1      }
  86          void rotate_r()
  87          {
  88   1        EM1_1=1,EM1_2=0;
  89   1        EM2_1=0,EM2_2=1;
  90   1      
  91   1      }
  92          void accelerate()
  93          {
  94   1        switch(PWM_LEVEL_1)
  95   1        {
  96   2          case 2:PWM_LEVEL_1=4;break;
  97   2          case 4:PWM_LEVEL_1=6;break;   
  98   2          case 6:PWM_LEVEL_1=8;break;
  99   2          case 8:PWM_LEVEL_1=10;break;
 100   2        }
 101   1        switch(PWM_LEVEL_2)
 102   1        {
 103   2          case 2:PWM_LEVEL_2=4;break;
 104   2          case 4:PWM_LEVEL_2=6;break;   
 105   2          case 6:PWM_LEVEL_2=8;break;
 106   2          case 8:PWM_LEVEL_2=10;break;    
 107   2        }
 108   1      }
 109          void decelerate()
 110          {
 111   1        switch(PWM_LEVEL_1)
 112   1        {
 113   2          case 10:PWM_LEVEL_1=8;break;    
 114   2          case 8:PWM_LEVEL_1=6;break;
 115   2          case 6:PWM_LEVEL_1=4;break;
 116   2          case 4:PWM_LEVEL_1=2;break;
 117   2        }
C51 COMPILER V9.60.0.0   EMCONTROL                                                         09/01/2022 19:19:40 PAGE 3   

 118   1        switch(PWM_LEVEL_2)
 119   1        {
 120   2          case 10:PWM_LEVEL_2=8;break;    
 121   2          case 8:PWM_LEVEL_2=6;break;
 122   2          case 6:PWM_LEVEL_2=4;break;
 123   2          case 4:PWM_LEVEL_2=2;break;   
 124   2        }
 125   1      }
 126          void find_track()
 127          {
 128   1        if(left_led1 == 0 && right_led1 == 0)//左右没识别到黑线
 129   1        {
 130   2          //accelerate();
 131   2          go_forward();//前进
 132   2          //decelerate();
 133   2          delay(4,0);//18650:40
 134   2            go_stop();
 135   2        }
 136   1        else
 137   1        {
 138   2          if(left_led1 == 1 && right_led1 == 0)//小车右边出线
 139   2          {
 140   3            
 141   3            go_left();//左转
 142   3            delay(10,0); //18650:310
 143   3            go_stop();
 144   3          }
 145   2          if(left_led1 == 0 && right_led1 == 1)//小车左边出线
 146   2          {
 147   3            
 148   3            go_right();//右转
 149   3            delay(10,0);
 150   3            go_stop();
 151   3          }
 152   2          /*if(left_led1 == 0 && right_led1 == 0)//左右都没识别到黑线
 153   2          {
 154   2            go_back();//后退
 155   2            delay(20,0);
 156   2            go_stop();
 157   2          }   */
 158   2        }
 159   1      }
 160          void auto_avoid()
 161          {
 162   1        //PT0 = 1;//防止PWM影响US
 163   1        measure_distance();
 164   1        go_forward();
 165   1        if(Distance>250)
 166   1        {
 167   2        if(R_LED==0&&L_LED==1)
 168   2        {
 169   3          go_left();
 170   3        }
 171   2        if(R_LED==1&&L_LED==0)
 172   2        {
 173   3         go_right();
 174   3        }
 175   2      }
 176   1        if(Distance<=250)
 177   1        {
 178   2          if(R_LED_DOWN==0&&L_LED_DOWN==1)
 179   2          {
C51 COMPILER V9.60.0.0   EMCONTROL                                                         09/01/2022 19:19:40 PAGE 4   

 180   3            go_left();
 181   3          }
 182   2          if(R_LED_DOWN==1&&L_LED_DOWN==0)
 183   2          {
 184   3            go_right();
 185   3          }
 186   2          if(R_LED_DOWN==0&&L_LED_DOWN==0)
 187   2          {
 188   3            rotate_r();
 189   3          }
 190   2          if(R_LED_DOWN==1&&L_LED_DOWN==1)
 191   2          {     
 192   3            if(R_LED==0&&L_LED==1)
 193   3            {
 194   4              go_left();
 195   4            }
 196   3            if(R_LED==1&&L_LED==0)
 197   3            {
 198   4              go_right();
 199   4            }
 200   3            if(R_LED==0&&L_LED==0)
 201   3            {
 202   4              rotate_r();
 203   4            }
 204   3            if(R_LED==1&&L_LED==1)
 205   3            {
 206   4              rotate_r();
 207   4            }
 208   3          }
 209   2        }
 210   1      }
 211          
 212          void auto_follow()//物体跟随
 213          {
 214   1      
 215   1        //PT0 = 1;//防止PWM影响US
 216   1        measure_distance();
 217   1        //为0 识别障碍物 为1没有识别到障碍物
 218   1        if((300<Distance && Distance < 700))
 219   1        { /*
 220   2          if(left_led2 == 0 && right_led2 == 0)//左右识别到障碍物，前进跟随
 221   2          {
 222   2            go_forward();//前进
 223   2            delay(10,0);
 224   2            go_stop();
 225   2          }
 226   2          if(left_led2 == 1 && right_led2 == 0)//小车右侧识别到障碍物，右转跟随
 227   2          {
 228   2            go_right();//右转
 229   2          }
 230   2          if(left_led2 == 0 && right_led2 == 1)//小车左侧识别到障碍物，左转跟随
 231   2          {
 232   2            go_left();//左转
 233   2          }*/
 234   2            go_forward();//前进
 235   2            delay(10,0);
 236   2        }
 237   1        else if(R_LED_DOWN==0||L_LED_DOWN==0)
 238   1        {
 239   2          if(R_LED_DOWN==0)
 240   2          {
 241   3            R_follow();
C51 COMPILER V9.60.0.0   EMCONTROL                                                         09/01/2022 19:19:40 PAGE 5   

 242   3          }
 243   2          else
 244   2          {
 245   3            L_follow(); 
 246   3          }
 247   2        }
 248   1        else
 249   1        {
 250   2          go_stop();
 251   2        }
 252   1        /*else if(Distance<500)
 253   1        {
 254   1          go_back();//
 255   1          delay(10,0);
 256   1      
 257   1        }
 258   1        else  
 259   1        {
 260   1          go_stop();
 261   1          delay(5,0);
 262   1        } */
 263   1      }
 264          
 265          void R_follow()
 266          {
 267   1        
 268   1        if(R_LED_DOWN==0&&R_LED==0)
 269   1        { 
 270   2          go_forward();
 271   2        }
 272   1        if(R_LED_DOWN==0&&R_LED==1)
 273   1        {
 274   2          go_fight();
*** WARNING C206 IN LINE 274 OF EMcontrol.c: 'go_fight': missing function-prototype
 275   2        }
 276   1        if(R_LED_DOWN==1&&R_LED==1)
 277   1        {
 278   2          stop();
*** WARNING C206 IN LINE 278 OF EMcontrol.c: 'stop': missing function-prototype
 279   2        }
 280   1      
 281   1      }
 282          
 283          void L_follow()
 284          {
 285   1        
 286   1        if(L_LED_DOWN==0&&L_LED==0)
 287   1        { 
 288   2          go_forward();
 289   2        }
 290   1        if(L_LED_DOWN==0&&L_LED==1)
 291   1        {
 292   2          go_left();
 293   2        }
 294   1        if(L_LED_DOWN==1&&L_LED==1)
 295   1        {
 296   2          stop();
 297   2        }
 298   1      
 299   1      }


C51 COMPILER V9.60.0.0   EMCONTROL                                                         09/01/2022 19:19:40 PAGE 6   

MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    508    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  2 WARNING(S),  0 ERROR(S)
